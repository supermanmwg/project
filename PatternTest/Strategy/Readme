2015-5-5
I. Strategy Pattern

	Person
	WalkBehavior walkBehavior---------------------> <<interface>> WalkBehavior {walk()}
	TalkBehavior talkBehavior---------------------> <<interface>> TalkBehavior {talk()}
     	Color color ----------------------------------> <<interface>> Color{getColor()}

                                   
                       ------------------>OldBlack
                    --------------------->YoungBlack
                ------------------------->OldWhite
        Person -------------------------->YoundWhite
		------------------------->OldYellow
		    --------------------->YoungYellow


                     --------->Fast
       WalkBehavior
        	     --------->Slow


                     --------->Louder
       TalkBehavior  
                     --------->Lower


		--------->YellowMan
       Color    --------->BlackMan
       		--------->WhiteMan

II. Principles
	Use more compositions!  (interface)
	Use few inherits!  

III. The differnce between abstract class and interface

 1 main difference :
  abstract class is "is a"    // single
  interface is "like a"  // many
 
 2 Others 
  (1) abstract class may contains non-abstract data elements,but interface does not.
      The interface only contains static final data elements
  (2) abstract class may contains non-abstract method,but interface does not.
